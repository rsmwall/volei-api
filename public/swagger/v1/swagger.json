{
  "openapi": "3.0.1",
  "info": {
    "title": "API V1",
    "version": "v1"
  },
  "paths": {
    "/match_requests": {
      "post": {
        "summary": "Creates a match request",
        "tags": [
          "MatchRequests"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "match request created"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "player_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "match_id": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "required": [
                  "player_id",
                  "match_id"
                ]
              }
            }
          }
        }
      }
    },
    "/match_requests/{id}/accept": {
      "patch": {
        "summary": "Accepts a match request",
        "tags": [
          "MatchRequests"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do pedido de adesão",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "request accepted"
          }
        }
      }
    },
    "/match_requests/{id}/reject": {
      "patch": {
        "summary": "Rejects a match request",
        "tags": [
          "MatchRequests"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do pedido de adesão",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "request rejected"
          }
        }
      }
    },
    "/match_requests/{id}/pay": {
      "patch": {
        "summary": "Marks a match request as paid",
        "tags": [
          "MatchRequests"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do pedido de adesão",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "request paid"
          }
        }
      }
    },
    "/match_requests/{id}/withdraw": {
      "patch": {
        "summary": "Withdraws a match request",
        "tags": [
          "MatchRequests"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do pedido de adesão",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "request withdrawn"
          }
        }
      }
    },
    "/matches": {
      "post": {
        "summary": "Creates a match",
        "tags": [
          "Matches"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "match created"
          },
          "422": {
            "description": "invalid request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Pelada de Sábado"
                  },
                  "location": {
                    "type": "string",
                    "example": "Quadra do bairro"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-09-20T14:00:00Z"
                  },
                  "category": {
                    "type": "string",
                    "example": "mista"
                  },
                  "status": {
                    "type": "string",
                    "example": "new"
                  },
                  "organizer_id": {
                    "type": "integer",
                    "example": 1
                  }
                },
                "required": [
                  "title",
                  "location",
                  "date",
                  "category",
                  "organizer_id"
                ]
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieves all matches",
        "tags": [
          "Matches"
        ],
        "responses": {
          "200": {
            "description": "matches found"
          }
        }
      }
    },
    "/players": {
      "post": {
        "summary": "Create a player",
        "tags": [
          "Players"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "player created"
          },
          "422": {
            "description": "invalid request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "player": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "gender": {
                        "type": "string"
                      },
                      "category": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "email",
                      "gender",
                      "category"
                    ]
                  }
                },
                "required": [
                  "player"
                ]
              }
            }
          }
        }
      }
    },
    "/players/{id}": {
      "get": {
        "summary": "Retrieves a player",
        "tags": [
          "Players"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do jogador",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "player found"
          },
          "404": {
            "description": "player not found"
          }
        }
      },
      "patch": {
        "summary": "Updates a player",
        "tags": [
          "Players"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do jogador",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "player updated"
          },
          "404": {
            "description": "player not found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "category": {
                    "type": "string",
                    "example": "profissional"
                  }
                },
                "required": [
                  "category"
                ]
              }
            }
          }
        }
      }
    },
    "/players/ranking": {
      "get": {
        "summary": "Retrieves player rankings",
        "tags": [
          "Players"
        ],
        "responses": {
          "200": {
            "description": "ranking retrieved"
          }
        }
      }
    },
    "/ratings": {
      "post": {
        "summary": "Creates a rating",
        "tags": [
          "Ratings"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "rating created"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rater_id": {
                    "type": "integer",
                    "example": 1,
                    "description": "ID do jogador que está avaliando"
                  },
                  "rated_id": {
                    "type": "integer",
                    "example": 2,
                    "description": "ID do jogador que está sendo avaliado"
                  },
                  "match_id": {
                    "type": "integer",
                    "example": 1,
                    "description": "ID da partida"
                  },
                  "score": {
                    "type": "integer",
                    "example": 5,
                    "description": "Pontuação da avaliação (1-5)"
                  }
                },
                "required": [
                  "rater_id",
                  "rated_id",
                  "match_id",
                  "score"
                ]
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://{defaultHost}",
      "variables": {
        "defaultHost": {
          "default": "www.example.com"
        }
      }
    }
  ]
}